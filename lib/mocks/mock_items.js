"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Helpers = __importStar(require("./helpers"));
var autogenerated_mock_elements_1 = require("./autogenerated_mock_elements");
var mock_typesOfEntity_1 = require("./mock_typesOfEntity");
function getAllBasicItems() {
    return autogenerated_mock_elements_1.allRandomBasicItems;
}
exports.getAllBasicItems = getAllBasicItems;
var allPossibleThumbnails = [];
for (var i = 30; i < 150; i++)
    allPossibleThumbnails.push("https://placeimg.com/" + i + "/" + i + "/any");
function getItem(itemId, maxSimilarItems) {
    if (!itemId)
        return null;
    var item = autogenerated_mock_elements_1.allRandomItemDetails[itemId + ''];
    if (!item)
        return null;
    if (maxSimilarItems > 0) {
        item.similarItems = generateRandomBunchOfItemListings(allPossibleThumbnails, maxSimilarItems);
    }
    else if (maxSimilarItems == 0) {
        item.similarItems = [];
    }
    else
        item.similarItems = generateRandomBunchOfItemListings(allPossibleThumbnails);
    return item;
}
exports.getItem = getItem;
var allTypesOfEntity = mock_typesOfEntity_1.getAllTypesOfEntity();
function makeRandomTOEData() {
    var toeData = [];
    allTypesOfEntity.forEach(function (toe) {
        toeData.push({
            type: toe,
            count: Helpers.getRandomIntInclusive(5, 20)
        });
    });
    return toeData;
}
function generateRandomBunchOfItemListings(allPossibleThumbnails, numOfItemsInput) {
    var itemListings = [];
    var numOfItems = Helpers.getRandomIntInclusive(10, 30);
    if (numOfItemsInput && numOfItemsInput > 0)
        numOfItems = numOfItemsInput;
    numOfItems = Math.min(numOfItems, autogenerated_mock_elements_1.allRandomBasicItems.length - 1);
    var basicItemsIdx = Helpers.pickNDistinctPositiveIntegers(autogenerated_mock_elements_1.allRandomBasicItems.length - 1, numOfItems);
    var randNum = Helpers.getRandomIntInclusive(1, 9);
    var randYear = Helpers.getRandomIntInclusive(1890, 2002);
    var randMonth = Helpers.randomPick(['gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic']);
    var randomDay = Helpers.getRandomIntInclusive(1, 28);
    var dateBlabel = randNum + "(" + randYear + " " + randMonth + "." + randomDay + ")";
    basicItemsIdx.forEach(function (bIdx) {
        var icon = null;
        var img = null;
        if (Math.random() > 0.5) {
            icon = Helpers.randomPick(allPossibleThumbnails);
        }
        else {
            img = "http://placeimg.com/25/25/arch/grayscale";
        }
        var itemL = {
            item: autogenerated_mock_elements_1.allRandomBasicItems[bIdx],
            thumbnail: icon,
            img: img,
            relatedTOEData: makeRandomTOEData(),
            breadcrumbs: [
                { label: Helpers.randomPick(["Raccolte speciali", "Raccolte standard", "Archivio"]),
                    link: null },
                { label: Helpers.randomPick(["Ministero dell'interno",
                        "Ministero dell'estero",
                        "Ufficio Principale",
                        "Ufficio Secondario"]), link: null },
                { label: "...", link: null }, { label: "...", link: null },
                { label: Helpers.randomPick(["Fascicolo della segreteria",
                        "Fascicolo primario",
                        "Documento generale"]), link: null },
                { label: dateBlabel, link: null }
            ]
        };
        itemListings.push(itemL);
    });
    return itemListings;
}
exports.generateRandomBunchOfItemListings = generateRandomBunchOfItemListings;
